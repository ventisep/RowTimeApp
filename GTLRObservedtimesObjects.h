// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   observedtimes/v1
// Description:
//   ObservedTimes API v1. This API allows the GET method to get a collection of
//   observed times since the last time the user asked for a list and a POST
//   method
//   to record new times

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRObservedtimes_RowTimePackageCrew;
@class GTLRObservedtimes_RowTimePackageEvent;
@class GTLRObservedtimes_RowTimePackageObservedTime;
@class GTLRObservedtimes_RowTimePackageStage;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  used to reply with the server time and comparison to the client time
 */
@interface GTLRObservedtimes_RowTimePackageClockSyncReply : GTLRObject

@property(nonatomic, strong, nullable) GTLRDateTime *clientTime;

/**
 *  diffInMs
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diffInMs;

@property(nonatomic, strong, nullable) GTLRDateTime *serverTime;

@end


/**
 *  used to store the request for a comparison of time between the server and
 *  the client
 */
@interface GTLRObservedtimes_RowTimePackageClockSyncRequest : GTLRObject

@property(nonatomic, strong, nullable) GTLRDateTime *clientTime;

@end


/**
 *  used to store the crew information
 */
@interface GTLRObservedtimes_RowTimePackageCrew : GTLRObject

@property(nonatomic, copy, nullable) NSString *category;

/**
 *  cox
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cox;

@property(nonatomic, copy, nullable) NSString *crewId;
@property(nonatomic, copy, nullable) NSString *crewName;

/**
 *  crewNumber
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *crewNumber;

/**
 *  division
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *division;

@property(nonatomic, strong, nullable) GTLRDateTime *endTimeLocal;
@property(nonatomic, copy, nullable) NSString *picFile;

/**
 *  rowerCount
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowerCount;

/**
 *  used to store the stages of the specific event to put in the CrewList
 *  message
 */
@property(nonatomic, strong, nullable) NSArray<GTLRObservedtimes_RowTimePackageStage *> *stages;

@property(nonatomic, strong, nullable) GTLRDateTime *startTimeLocal;

@end


/**
 *  GTLRObservedtimes_RowTimePackageCrewList
 */
@interface GTLRObservedtimes_RowTimePackageCrewList : GTLRObject

/** used to store the crew information */
@property(nonatomic, strong, nullable) NSArray<GTLRObservedtimes_RowTimePackageCrew *> *crews;

@property(nonatomic, copy, nullable) NSString *eventId;

@end


/**
 *  used to store the event information
 */
@interface GTLRObservedtimes_RowTimePackageEvent : GTLRObject

@property(nonatomic, copy, nullable) NSString *eventDate;
@property(nonatomic, copy, nullable) NSString *eventDesc;
@property(nonatomic, copy, nullable) NSString *eventId;
@property(nonatomic, copy, nullable) NSString *eventName;

@end


/**
 *  GTLRObservedtimes_RowTimePackageEventList
 */
@interface GTLRObservedtimes_RowTimePackageEventList : GTLRObject

/** used to store the event information */
@property(nonatomic, strong, nullable) NSArray<GTLRObservedtimes_RowTimePackageEvent *> *events;

@end


/**
 *  used to store an observered time from a user for a specific Crew.
 */
@interface GTLRObservedtimes_RowTimePackageObservedTime : GTLRObject

/**
 *  crew
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *crew;

@property(nonatomic, copy, nullable) NSString *eventId;

/**
 *  obsType
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *obsType;

/**
 *  stage
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stage;

@property(nonatomic, strong, nullable) GTLRDateTime *time;
@property(nonatomic, copy, nullable) NSString *timeId;
@property(nonatomic, strong, nullable) GTLRDateTime *timestamp;

@end


/**
 *  Used to provide a list of Observed times since last request for a specific
 *  event
 */
@interface GTLRObservedtimes_RowTimePackageObservedTimeList : GTLRObject

@property(nonatomic, copy, nullable) NSString *eventId;
@property(nonatomic, strong, nullable) GTLRDateTime *lastTimestamp;

/** used to store an observered time from a user for a specific Crew. */
@property(nonatomic, strong, nullable) NSArray<GTLRObservedtimes_RowTimePackageObservedTime *> *times;

@end


/**
 *  used to store the stages of the specific event to put in the CrewList
 *  message
 */
@interface GTLRObservedtimes_RowTimePackageStage : GTLRObject

@property(nonatomic, copy, nullable) NSString *label;

/**
 *  stageIndex
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stageIndex;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
